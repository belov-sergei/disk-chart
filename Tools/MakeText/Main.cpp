// Copyright ❤️ 2023-2024, Sergei Belov
#include "fmt/format.h"

#include <pugixml.hpp>

int main(int argc, char* argv[]) {
	std::ofstream stream("Source/Library/Components/LocalizationComponent.Generated.cpp");
	stream << "// WARNING: This file is automatically generated. Manual changes to this file may be lost.\n\n";
	stream << "#include \"LocalizationComponent.h\"\n\n";
	stream << "// clang-format off\n";
	stream << "void LocalizationComponent::LoadText() {\n";

	pugi::xml_document translationDocument;
	std::ignore = translationDocument.load_file("Translations.xml");

	const auto rootElement = translationDocument.document_element();
	for (const auto languageNode : rootElement) {
		stream << fmt::format("\tLocalization::Language(\"{}\");\n", languageNode.name());

		for (const auto textNode : languageNode) {
			const auto textId = textNode.attribute("Id");
			const auto value = textNode.attribute("Value");

			stream << fmt::format("\tLocalization::Text::Add(\"{}\", \"{}\");\n", textId.as_string(), value.as_string());
		}

		if (languageNode != rootElement.last_child()) {
			stream << "\n";
		}
	}

	stream << "}\n";
	stream << "// clang-format on\n";

	return 0;
}
